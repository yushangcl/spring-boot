# server config
server.port=8081
# \u73AF\u5883
profile = dev_envrimont

#ZooKeeper
dubbo.registry.address=123.207.119.211:2181
dubbo.provider.timeout=60000
dubbo.provider.connections=100
dubbo.version.surfix=dev

# sql config
spring.datasource.url=jdbc:mysql://123.207.119.211:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=user
spring.datasource.password=123456789..++
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#MongoDB config
#spring.data.mongodb.database=spring-boot
#spring.data.mongodb.host=127.0.0.1:27017

# REDIS (RedisProperties)

# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
# Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=123.207.119.211
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=6379
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=147258369..
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=0
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=0

spring.config.location=
#============== kafka ===================
# \u6307\u5B9Akafka \u4EE3\u7406\u5730\u5740\uFF0C\u53EF\u4EE5\u591A\u4E2A
spring.kafka.bootstrap-servers=kafka.likie.win:9092

#=============== provider  =======================
spring.kafka.producer.retries=0
# \u6BCF\u6B21\u6279\u91CF\u53D1\u9001\u6D88\u606F\u7684\u6570\u91CF
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# \u6307\u5B9A\u9ED8\u8BA4\u6D88\u8D39\u8005group id
spring.kafka.consumer.group-id=dev-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# mail config
spring.mail.host=smtp.qq.com
spring.mail.username=lov.m@qq.com
spring.mail.password=WHH88913HH233123..
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#=============== \u6587\u4EF6\u4E0A\u4F20  =======================
# \u7981\u7528 thymeleaf \u7F13\u5B58
spring.thymeleaf.cache=false
# \u662F\u5426\u652F\u6301\u6279\u91CF\u4E0A\u4F20   (\u9ED8\u8BA4\u503C true)
spring.servlet.multipart.enabled=true
# \u4E0A\u4F20\u6587\u4EF6\u7684\u4E34\u65F6\u76EE\u5F55 \uFF08\u4E00\u822C\u60C5\u51B5\u4E0B\u4E0D\u7528\u7279\u610F\u4FEE\u6539\uFF09
spring.servlet.multipart.location=
# \u4E0A\u4F20\u6587\u4EF6\u6700\u5927\u4E3A 1M \uFF08\u9ED8\u8BA4\u503C 1M \u6839\u636E\u81EA\u8EAB\u4E1A\u52A1\u81EA\u884C\u63A7\u5236\u5373\u53EF\uFF09
spring.servlet.multipart.max-file-size=1048576
# \u4E0A\u4F20\u8BF7\u6C42\u6700\u5927\u4E3A 10M\uFF08\u9ED8\u8BA4\u503C10M \u6839\u636E\u81EA\u8EAB\u4E1A\u52A1\u81EA\u884C\u63A7\u5236\u5373\u53EF\uFF09
spring.servlet.multipart.max-request-size=10485760
# \u6587\u4EF6\u5927\u5C0F\u9608\u503C\uFF0C\u5F53\u5927\u4E8E\u8FD9\u4E2A\u9608\u503C\u65F6\u5C06\u5199\u5165\u5230\u78C1\u76D8\uFF0C\u5426\u5219\u5B58\u5728\u5185\u5B58\u4E2D\uFF0C\uFF08\u9ED8\u8BA4\u503C0 \u4E00\u822C\u60C5\u51B5\u4E0B\u4E0D\u7528\u7279\u610F\u4FEE\u6539\uFF09
spring.servlet.multipart.file-size-threshold=0
# \u5224\u65AD\u662F\u5426\u8981\u5EF6\u8FDF\u89E3\u6790\u6587\u4EF6\uFF08\u76F8\u5F53\u4E8E\u61D2\u52A0\u8F7D\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u4E0D\u7528\u7279\u610F\u4FEE\u6539\uFF09
spring.servlet.multipart.resolve-lazily=false

